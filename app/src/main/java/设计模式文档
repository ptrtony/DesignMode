1 单一职责原则
包名：singleResponsibility
单一职责原则注意事项和细节
1)、降低类的复杂度，一个类只复杂一项职责
2)、提高类的可读性，可维护性
3)、降低变更引起的风险
4)、通常情况下，我们应当遵守单一职责原则，只有逻辑足够简单，才可以在代码级违反单一职责原则：
只有类中方法数量足够少，可以在方法级别保持单一职责原则
2 接口隔离原则
包名interface_segregation_principle
基本介绍
1)、客户端不应该依赖它不需要的接口，即一个类对另一个类的依赖
应该建立在最小的接口上
2)、类A通过接口Interface1依赖类B，类C通过接口Interface1依赖类D，如果接口
Interface1对于类A和类C来说不是最小接口，那么类B和类D必须去实现他们不需要的方法
3)、按隔离原则应当这样处理：
将接口interface拆分为独立的几个接口，类A和类C分别与他们需要的接口建立依赖关系。也就是采用接口隔离原则。
1)、类A通过接口Interface1依赖类B，类C通过接口Interface1依赖类D，如果接口Interface1对于类A和类C来说
不是最小接口，那么类B和类D必须去实现他们不需要的方法
2)、将接口Interface1拆分为独立的几个接口，类A和类C分别与他们需要的接口建立依赖关系，也就是采用接口隔离原则
3)、接口Interface1中出现的方法，根据实际情况拆分为三个接口
4)、代码实现
